from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import os
import asyncio
from plugins.teletips_t import *
from pyrogram.errors import FloodWait, MessageNotModified
from pyrogram.raw.functions.messages import UpdatePinnedMessage

bot=Client(
    "Countdown-TeLeTiPs",
    api_id = int(os.environ["API_ID"]),
    api_hash = os.environ["API_HASH"],
    bot_token = os.environ["BOT_TOKEN"]
)

stoptimer = False

TELETIPS_MAIN_MENU_BUTTONS = [
            [
                InlineKeyboardButton('‚ùì –•–µ–ª–ø –º—ñ', callback_data="HELP_CALLBACK")
            ],
            [
                InlineKeyboardButton('üë• –ú—î–º–∏...', callback_data="GROUP_CALLBACK"),
            ],
            [
                InlineKeyboardButton('‚ûï–•–æ—á—É –±–æ—Ç–∞ —Å–æ–±—ñ –≤ —á–∞—Ç‚ûï', callback_data="TUTORIAL_CALLBACK")
            ]
        ]

@bot.on_message(filters.command(['start','help']) & filters.private)
async def start(client, message):
    text = START_TEXT
    reply_markup = InlineKeyboardMarkup(TELETIPS_MAIN_MENU_BUTTONS)
    await message.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

@bot.on_callback_query()
async def callback_query(client: Client, query: CallbackQuery):
    if query.data=="HELP_CALLBACK":
        TELETIPS_HELP_BUTTONS = [
            [
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="START_CALLBACK")
            ]
            ]
        reply_markup = InlineKeyboardMarkup(TELETIPS_HELP_BUTTONS)
        try:
            await query.edit_message_text(
                HELP_TEXT,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass

    elif query.data=="GROUP_CALLBACK":
        TELETIPS_GROUP_BUTTONS = [
            [
                InlineKeyboardButton("üåé –ù–∞—à—ñ –º—î–º–∏", url="https://t.me/prikladnyk")
            ],
            [
                InlineKeyboardButton("üåé –©–µ –æ–¥–Ω—ñ –º—î–º–∏", url="https://t.me/prykladni_koty")
            ],
            [
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="START_CALLBACK"),
            ]
            ]
        reply_markup = InlineKeyboardMarkup(TELETIPS_GROUP_BUTTONS)
        try:
            await query.edit_message_text(
                GROUP_TEXT,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass    

    elif query.data=="TUTORIAL_CALLBACK":
        TELETIPS_TUTORIAL_BUTTONS = [
            [
                InlineKeyboardButton("üåé –ö–ª–æ–Ω–∏ —Ç—É—Ç: ", url="https://t.me/+r-EclAZpVZo5NTUy")
            ],
            [
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="START_CALLBACK"),
            ]
            ]
        reply_markup = InlineKeyboardMarkup(TELETIPS_TUTORIAL_BUTTONS)
        try:
            await query.edit_message_text(
                TUTORIAL_TEXT,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass      
          
    elif query.data=="START_CALLBACK":
        TELETIPS_START_BUTTONS = [
            [
                InlineKeyboardButton('‚ùì HELP', callback_data="HELP_CALLBACK")
            ],
            [
                InlineKeyboardButton('üì£ –ü–†–ò–ö–õ–ê–î–ù–Ü –ú–Ñ–ú–ò', url='https://t.me/prikladnyk'),
                InlineKeyboardButton('ü§° –ß–Ñ–õ –Ø–ö–ò–ô –°–ü–ò–ó–î–ò–í –ë–û–¢–ê', url='https://t.me/kyrylo0')
            ],
            [
                InlineKeyboardButton('‚ûï–•–æ—á—É –±–æ—Ç–∞ —Å–æ–±—ñ –≤ —á–∞—Ç‚ûï', callback_data="TUTORIAL_CALLBACK")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(TELETIPS_START_BUTTONS)
        try:
            await query.edit_message_text(
                START_TEXT,
                reply_markup=reply_markup
            )
        except MessageNotModified:
            pass    

@bot.on_message(filters.command('set'))
async def set_timer(client, message):
    global stoptimer
    try:
        if message.chat.id>0:
            return await message.reply('‚õîÔ∏è –°–ø—Ä–æ–±—É–π —Ü—é –∫–æ–º–∞–Ω–¥—É –≤ **–≥—Ä—É–ø —á–∞—Ç—ñ**.')
        elif not (await client.get_chat_member(message.chat.id,message.from_user.id)).can_manage_chat:
            return await message.reply('üëÆüèª‚Äç‚ôÇÔ∏è –í–∏–±–∞—á(( **—Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω_–∫_–∏** –º–æ–∂—É—Ç—å –∑–∞—Å—Ç–∞–≤–ª—è—Ç–∏ –º–µ–Ω–µ —Ü–µ —Ä–æ–±–∏—Ç–∏((')    
        elif len(message.command)<3:
            return await message.reply('‚ùå **–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç**\n\n‚úÖ –§–æ—Ä–º–∞—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —Ç—ñ–ø–∞ \n<code> /set seconds "–≤–∞–∂–Ω–∏–π —ñ–≤–µ–Ω—Ç"</code>\n\n**–ü—Ä–∏–∫–ª–∞–¥**:\n <code>/set 86400 "–î–ï–î–õ–ê–ô–ù –†–û–ë–Ü–¢ –î–ê–†–ß–£–ö üò≥"</code>')    
        else:
            user_input_time = int(message.command[1])
            user_input_event = str(message.command[2])
            get_user_input_time = await bot.send_message(message.chat.id, user_input_time)
            await get_user_input_time.pin()
            if stoptimer: stoptimer = False
            if 0<user_input_time<=10:
                while user_input_time and not stoptimer:
                    s=user_input_time%60
                    Countdown_TeLe_TiPs='{}\n\n‚è≥ {:02d}**s**\n\n<i>"–Ø –Ω–µ —Ñ—ñ–ª–æ–ª–æ–≥...–•–æ—á–∞ –º–± —Ç—Ä–æ—Ö–∏ –π –¥–∞....."</i>\n      - Steve Jobs'.format(user_input_event, s)
                    finish_countdown = await get_user_input_time.edit(Countdown_TeLe_TiPs)
                    await asyncio.sleep(1)
                    user_input_time -=1
                await finish_countdown.edit("üö® –ë—ñ–ø! –ë—ñ—ñ–ø –±–ª—è—Ç—å!! **–ß–∞—Å –∑–∞–∫—ñ–Ω—á–∏–º–≤—Å—è!!!**")
            elif 10<user_input_time<60:
                while user_input_time>0 and not stoptimer:
                    s=user_input_time%60
                    Countdown_TeLe_TiPs='{}\n\n‚è≥ {:02d}**s**\n\n<i>"–ñ–∏–≤—ñ—Ç—å —Ç–∞–∫, —à–æ–± –ø–æ—Ç—ñ–º —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–æ—Ä–ø—É—Å –î–∞—Ä—á—É–∫..."</i>\n      - Steve Jobs'.format(user_input_event, s)
                    finish_countdown = await get_user_input_time.edit(Countdown_TeLe_TiPs)
                    await asyncio.sleep(3)
                    user_input_time -=3
                await finish_countdown.edit("üö® –ë—ñ–ø! –ë—ñ—ñ–ø –±–ª—è—Ç—å!! **–ß–∞—Å –∑–∞–∫—ñ–Ω—á–∏–º–≤—Å—è!!!**")
            elif 60<=user_input_time<3600:
                while user_input_time>0 and not stoptimer:
                    m=user_input_time%3600//60
                    s=user_input_time%60
                    Countdown_TeLe_TiPs='{}\n\n‚è≥ {:02d}**m** : {:02d}**s**\n\n<i>"–ì—É–ª—è –±—É–≤ –Ω–µ —Ç–∞–∫–∏–º –≤–∂–µ –π –ø–æ–≥–∞–Ω–∏–º..."</i>\n      - Steve Jobs'.format(user_input_event, m, s)
                    finish_countdown = await get_user_input_time.edit(Countdown_TeLe_TiPs)
                    await asyncio.sleep(3)
                    user_input_time -=3
                await finish_countdown.edit("üö® –ë—ñ–ø! –ë—ñ—ñ–ø –±–ª—è—Ç—å!! **–ß–∞—Å –∑–∞–∫—ñ–Ω—á–∏–º–≤—Å—è!!!**")
            elif 3600<=user_input_time<86400:
                while user_input_time>0 and not stoptimer:
                    h=user_input_time%(3600*24)//3600
                    m=user_input_time%3600//60
                    s=user_input_time%60
                    Countdown_TeLe_TiPs='{}\n\n‚è≥ {:02d}**h** : {:02d}**m** : {:02d}**s**\n\n<i>"–ë—É–¥—å —è–∫ –§–µ–¥–æ—Ä–æ–≤–∞..."</i>\n      - Steve Jobs'.format(user_input_event, h, m, s)
                    finish_countdown = await get_user_input_time.edit(Countdown_TeLe_TiPs)
                    await asyncio.sleep(7)
                    user_input_time -=7
                await finish_countdown.edit("üö® –ë—ñ–ø! –ë—ñ—ñ–ø –±–ª—è—Ç—å!! **–ß–∞—Å –∑–∞–∫—ñ–Ω—á–∏–º–≤—Å—è!!!**")
            elif user_input_time>=86400:
                while user_input_time>0 and not stoptimer:
                    d=user_input_time//(3600*24)
                    h=user_input_time%(3600*24)//3600
                    m=user_input_time%3600//60
                    s=user_input_time%60
                    Countdown_TeLe_TiPs='{}\n\n‚è≥ {:02d}**d** : {:02d}**h** : {:02d}**m** : {:02d}**s**\n\n<i>"–ì–æ–ª—É–±–æ–≤—Å—å–∫–∞ ‚Äî –Ω–∞–π–∫—Ä–∞—â–µ, —â–æ –∑ –≤–∞–º–∏ –∫–æ–ª–∏-–Ω–µ–±—É–¥—å —Å—Ç–∞–Ω–µ—Ç—å—Å—è..."</i>\n      - Steve Jobs'.format(user_input_event, d, h, m, s)
                    finish_countdown = await get_user_input_time.edit(Countdown_TeLe_TiPs)
                    await asyncio.sleep(9)
                    user_input_time -=9
                await finish_countdown.edit("üö® –ë—ñ–ø! –ë—ñ—ñ–ø –±–ª—è—Ç—å!! **–ß–∞—Å –∑–∞–∫—ñ–Ω—á–∏–º–≤—Å—è!!!**")
            else:
                await get_user_input_time.edit(f"ü§∑üèª‚Äç‚ôÇÔ∏è –Ø —Ö–∑ —è–∫ —Ä–∞—Ö—É–≤–∞—Ç–∏ –∑ —Ü—å–æ–≥–æ —á–∞—Å—É {user_input_time}")
                await get_user_input_time.unpin()
    except FloodWait as e:
        await asyncio.sleep(e.x)

@bot.on_message(filters.command('stopc'))
async def stop_timer(Client, message):
    global stoptimer
    try:
        if (await bot.get_chat_member(message.chat.id,message.from_user.id)).can_manage_chat:
            stoptimer = True
            await message.reply('üõë –ü—Ä–∏–∫–ª–∞–¥–Ω–∏–π –∫–∞—É–Ω—Ç–¥–∞—É–Ω –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è...')
        else:
            await message.reply('üëÆüèª‚Äç‚ôÇÔ∏è –í–∏–±–∞—á(( **—Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω_–∫_–∏** –º–æ–∂—É—Ç—å –∑–∞—Å—Ç–∞–≤–ª—è—Ç–∏ –º–µ–Ω–µ —Ü–µ —Ä–æ–±–∏—Ç–∏((')
    except FloodWait as e:
        await asyncio.sleep(e.x)

print("Countdown Timer is alive!")
bot.run()
